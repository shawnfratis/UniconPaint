#Main module for Unicon Draw
#Hacked mercilessly from Clint's Etch-a-Sketch program

link wopen
link xcompat

procedure main3()

#w1 := ("bg=black","linewidth=1","fg=green","bg=black","size=300,300") | stop("can't open window")

#WAttrib("fg=green")

Fg("black")

FillRectangle(10,10,800,500)

WAttrib("linewidth=1","fg=green",Clip(10,10,800,500)) 


  # w2 := XBind(w1,"drawop=xor") | stop("can't XBind w2")
  # w3 := XBind(w1,"reverse=on") | stop("can't XBind w3")

  repeat{
      w := Active() | stop("Active fails")
      #if (w === (w1|w2)) then {
      if w := 1 then {
	  x1 := xa
	  x2 := xb
	  y1 := ya
	  y2 := yb
	  dragging := da
      } else {
	  x1 := xc
	  x2 := xd
	  y1 := yc
	  y2 := yd
	  dragging := dc
      }
      
      case e := Event(w) of {
	  
	  &lpress | &mpress | &rpress: {
	      x1 := &x
	      y1 := &y
	      x2 := y2 := &null
	  }
	  
"\z": {
	 
        WriteImage("fg01.png")
        }
"\q": {
	      WAttrib("linewidth=1")
              }
"\w": {
	      WAttrib("linewidth=2")
              }
"\y": {
	      WAttrib("linewidth=3")
              }
"\u": {
	      WAttrib("linewidth=4")
              }
"\i": {
	      WAttrib("linewidth=5")
              }
"\o": {
	      WAttrib("linewidth=6")
              }
"\p": {
	      WAttrib("linewidth=8")
              }
"\k": {
	      WAttrib("linewidth=10")
              }
"\a": {
	      Fg("red")
              }
"\s": {
	      Fg("green")
              }
"\g": {
	      Fg("orange")
              }
"\h": {
	      Fg("blue")
              }
"\J": {
	      Fg("purple")
              }
"\G": {
	      Fg("yellow")
              }
"\H": {
	      Fg("black")
              }
"\j": {
	      WAttrib("bg=black")
              }


	  &lrelease: {
	      DrawLine(\x1,\y1,&x,&y)
	      
	  }
	  &mrelease: {
	      DrawLine(x1,y1,&x,&y)
	      
	      dragging := &null
	  }
	  &rrelease: {
	      DrawLine(x1,y1,&x,&y)
	      
	  }
	  
	  &ldrag : {
	      DrawLine(x1,y1,&x,&y)
	      
	      x1 := &x   
	      y1 := &y
	  }
	 # &rdrag : {
	     # DrawLine(x1,y1,&x,&y)
	      
	     # x1 := &x   
	     # y1 := &y
	 # }
	  &mdrag: {
	      if /dragging then dragging := 1
	      else { 
		  DrawLine(x1,y1,\x2,\y2)
		  
	      }
	      x2 := &x
	      y2 := &y
	      DrawLine(x1,y1,x2,y2)
	      
	  }

	  #"\^l": {
        "\,": {
	      EraseArea()
	    }
	  "\e": break
      }

     # if (w === (w1|w2)) then {
      if w := 1 then {
	  xa := x1
	  xb := x2
	  ya := y1
	  yb := y2
	  da := dragging
      } else {
	  xc := x1
	  xd := x2
	  yc := y1
	  yd := y2
	  dc := dragging
  return()    
}
 }

#end
end
